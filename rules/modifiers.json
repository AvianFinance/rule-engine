{
    "notSellListed" : ["NFT cannot already be listed for selling",["(address nftAddress, uint256 tokenId) {","Listing_sell memory listing = s_listings[nftAddress][tokenId];","if (listing.price > 0) {"," revert AlreadyListed(nftAddress, tokenId);","}","_;"],"notSListed(nftAddress, tokenId)"],
    "isSellListed" : ["NFT needs to be listed for selling",["(address nftAddress, uint256 tokenId) {","Listing_sell memory listing = s_listings[nftAddress][tokenId];","if (listing.price <= 0) {"," revert NotListed(nftAddress, tokenId);","}","_;"],"isSListed(nftAddress, tokenId)"],
    "notInsListed" : ["NFT cannot already be listed for Ins Renting",["(address nftAddress, uint256 tokenId, address spender) {","IERC721 nft = IERC721(nftAddress);","address owner = nft.ownerOf(tokenId);","if (spender != owner) {","  revert NotOwner();","}","_;"],"notIListed(nftAddress, tokenId)"],
    "isInsListed" : ["NFT needs to be listed for Ins renting",["(address nftAddress, uint256 tokenId) {","Listing_installment memory listing = i_listings[nftAddress][tokenId];","if (listing.pricePerDay <= 0) {","    revert NotListed(nftAddress, tokenId);","}","_;"],"isIListed(nftAddress, tokenId)"],
    "notRentListed" : ["NFT cannot already be listed for Renting",["(address nftAddress, uint256 tokenId) {","Listing_rent memory listing = r_listings[nftAddress][tokenId];","if (listing.pricePerDay > 0) {","   revert AlreadyListed(nftAddress, tokenId);","}","_;"],"notRListed(nftAddress, tokenId)"],
    "isRentListed" : ["NFT needs to be listed for renting", ["(address nftAddress, uint256 tokenId) {","Listing_rent memory listing = r_listings[nftAddress][tokenId];","if (listing.pricePerDay <= 0) {","   revert NotListed(nftAddress, tokenId);","}","_;"],"isRListed(nftAddress, tokenId)"],
    "isOwner" : ["Transaction should be from the NFT Owner",["(address nftAddress,uint256 tokenId,address spender) {","IERC721 nft = IERC721(nftAddress);","address owner = nft.ownerOf(tokenId);","if (spender != owner) {","  revert NotOwner();","}","_;"],"isOwner(nftAddress, tokenId, msg.sender)"],
    "non-reentrant" : ["Prevent parallel occurences - dont declare in function level","nonReentrant","nonReentrant"]
}